
/**
* Cmd+Shift+o         快速查找类
* Ctrl+6              列出当前文件所有方法
* Ctrl+Cmd+up         切换.h和.m
* Cmd+Shift+Y         显示/隐藏控制台
* Cmd+Ctrl+Left/Right 到上/下一次编辑的位置
* Cmd+T               新建tab栏
* Cmd+Shift+[         切换tab栏
* ESC                 代码补全
*/


/**
* nil：指向一个对象的空指针,对objective c id 对象赋空值.
* Nil：指向一个类的空指针,表示对类进行赋空值.
* NULL：指向其他类型（如：基本类型、C类型）的空指针, 用于对非对象指针赋空值.
* NSNull：在集合对象中，表示空值的对象.
*/

/**
cmd + option + /
注释快捷键
@param collectionView <#collectionView description#>
@param indexPath <#indexPath description#>
*/


/**
*  isKindOfClass:确定一个对象是否是一个类的成员,或者是派生自该类的成员
*  isMemberOfClass:确定一个对象是否是当前类的成员
*  isSubclassOfClass：判断对象是否为某类或者其派生类的实例（类方法)
*/


/**
 * __block的作用:
 * 将其修饰的变量从栈区copy到了堆区,对其指针地址的打印可以看出
 */

/**
* 浅拷贝:拷贝原对象指针,使其引用计数+1,并没有创建新对象.(AB指向同一块内存)
* 深拷贝:拷贝原对象的值,内存地址完全不同的新对象,两者无关联.
*/


/**
* 连线UI控件都用weak修饰
* NSString: 用copy修饰
* Block:    用copy修饰
* delegate: 用weak修饰
* retain(mrc),strong(arc),weak(arc，释放后赋值nil),assign(mrc,arc，释放后不会赋值nil，会导致野指针),copy(mrc,arc)
*/

/**
* command+= :siziToFit
* option+command+= :storyboard警告
*/

/** cell复用 UI绑定数据 */
+ (void)load
{
//编译的时候调用
}

+ (void)initialize
{
//创建实例的时候调用
}
//extern:代表其他类可以引用
//const:不可更改
//static:静态/全局变量
extern NSString *const MJPropertyTypeIvar;

}
